apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

sourceCompatibility = 1.8		         //設定編譯階段的JDK版本
sourceSets.main.java.srcDir  'src'	     //使用src目錄放置Java程式原始碼      (gradle原預設位置是src/main/java目錄)
sourceSets.main.resources.srcDir  'src'	 //使用src目錄放置resources原始碼 (gradle原預設位置是src/main/resources目錄) (在進行cargoRedeployRemote以熱部署匯出war檔時，將可包含xml檔)
                                                                     
webAppDirName = 'WebContent'		     //使用WebContent目錄放置網頁資源
									
repositories {
	mavenCentral()					     //使用 maven central repository (中央存儲庫)
}

configure(allprojects) { project ->      //函式庫<version>設定動態
    ext.springVersion = "4.3.2.RELEASE"
    ext.hibernateVersion = "5.2.8.Final"
    ext.hibernateValidatorVersion = "5.4.0.Final"
    
    ext.servletVersion = "3.1.0"
    ext.websocketVersion = "1.1"
    ext.jstlVersion = "1.2.5"
    ext.jsonVersion = "1.0.2"
    ext.mailVersion = "1.5.2"
    
    ext.commonslangVersion = "3.0"
    ext.commonsloggingVersion = "1.2"
    ext.slf4jVersion = "1.7.19"
    ext.log4jVersion = "1.2.17"

    
}

//設置依賴
//自行加入會用到的函式庫Library套件，格式如下 :<groupId> : <artifactId> : <version>
dependencies {
    //spring
    //compile("org.springframework:spring-context:${springVersion}")
    //compile("org.springframework:spring-context-support:${springVersion}")
    //compile("org.springframework:spring-orm:${springVersion}")
    //compile("org.springframework:spring-tx:${springVersion}")
    //compile("org.springframework:spring-aspects:${springVersion}")
    //compile("org.springframework:spring-webmvc:${springVersion}")
    
    //hibernate
    //compile("org.hibernate:hibernate-core:${hibernateVersion}")
    //compile("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
    //compile("org.hibernate:hibernate-c3p0:${hibernateVersion}")
    //compile("org.hibernate:hibernate-proxool:${hibernateVersion}")
    //compile("org.hibernate:hibernate-java8:${hibernateVersion}")   //註: hibernate 5 才能支援 Java 8 
    
    //hibernate-validator (jsr303 Bean Validation) (jsr303 Bean 驗證)
    //compile("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    
    //servlet
    //providedCompile("javax.servlet:javax.servlet-api:${servletVersion}")
    
    //websocket
    //providedCompile("javax.websocket:javax.websocket-api:${websocketVersion}")
    
    //jstl
    //runtime("org.apache.taglibs:taglibs-standard-impl:${jstlVersion}")
    //runtime("org.apache.taglibs:taglibs-standard-spec:${jstlVersion}")
    
    //json
    //compile("org.glassfish:javax.json:${jsonVersion}")
    
    //mail
    //compile("com.sun.mail:javax.mail:${mailVersion}")
    
    //commons-lang
    //compile("org.apache.commons:commons-lang3:${commonslangVersion}")
    
    //commons-logging
    //compile("commons-logging:commons-logging:${commonsloggingVersion}")
    
    //slf4j
    //compile("org.slf4j:slf4j-api:${slf4jVersion}")
    //compile("org.slf4j:slf4j-log4j12:${slf4jVersion}")
    
    //log4j
    //compile("log4j:log4j:${log4jVersion}")
    
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	//compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.8'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
	//compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.8'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	//compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.8'
	
	//Mybatis
	//compile group: 'org.mybatis', name: 'mybatis', version: '3.2.7'
	
	// Mssql Driver
	//testCompile group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '6.2.0.jre8'

	compile("org.apache.tomcat:tomcat-servlet-api:8.0.24")
	compile("jstl:jstl:1.2")
	compile("org.springframework:spring-beans:4.3.5.RELEASE")
	compile("org.springframework:spring-context:4.3.5.RELEASE")
	compile("org.springframework:spring-context-support:4.3.5.RELEASE")
	compile("org.springframework:spring-web:4.3.5.RELEASE")
	compile("org.springframework:spring-webmvc:4.3.5.RELEASE")
	compile("org.springframework:spring-tx:4.3.5.RELEASE")
	compile("com.alibaba:druid:1.0.15")
	compile("org.aspectj:aspectjweaver:1.8.6")
	compile("org.mybatis:mybatis-spring:1.3.1")
	compile("org.mybatis:mybatis:3.4.1")
	compile("org.springframework:spring-jdbc:4.3.5.RELEASE")
	compile("junit:junit:4.12")
	compile("org.springframework:spring-test:4.0.5.RELEASE")
	compile("com.alibaba:fastjson:1.2.31")
	compile("log4j:log4j:1.2.17")
	
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.25-incubating'
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
	compile group: 'commons-io', name: 'commons-io', version: '2.2'
	compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
	
	// https://mvnrepository.com/artifact/com.microsoft.sqlserver/sqljdbc4
	testCompile group: 'com.microsoft.sqlserver', name: 'sqljdbc4', version: '4.0'


	
	
	providedCompile 'javax.servlet:servlet-api:3.0.1'	
	providedCompile 'javax.servlet.jsp:jsp-api:2.2.1-b03'
    
    
}

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.bmuschko:gradle-cargo-plugin:2.2.2'
	}
}

//使用gradle-cargo-plugin熱部署(輕量級)war
//需先啟動Tomcat，並於tomcat-users.xml添加：<user password="manager-script" roles="manager-script" username="manager-script"/>
apply plugin: 'com.bmuschko.cargo'
cargo {
    containerId = 'tomcat8x'
    port = 8081
    remote {
		protocol = 'http'
		hostname = 'localhost'
		username = 'manager-script'
		password = 'manager-script'
    }
}

//Eclipse Project Facets 只有在 Dynamic Web Project 時才有功能，只是方便"快速擴充套件" 與 "控管套件版本"
import org.gradle.plugins.ide.eclipse.model.Facet
eclipse {
	wtp {
		facet {
			facet name: 'jst.web', type: Facet.FacetType.fixed
			facet name: 'jst.web', version: '3.1'

			facet name: 'jst.java', type: Facet.FacetType.fixed
			facet name: 'jst.java', version: '1.8'
			
			facet name: 'wst.jsdt.web', type: Facet.FacetType.fixed
			facet name: 'wst.jsdt.web', version: '1.0'
		}
	}
}

//在進行cargoRedeployRemote以熱部署匯出war檔時，將可包含xml檔與java原始檔
war {
    webInf{
        from('src') {
            include '**/*.*'
            into('classes/')
        }
           
    }
}